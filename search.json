[{"path":"https://cidm-ph.github.io/ggautomap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Western Sydney Local Health District, NSW Health Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/articles/ggautomap.html","id":"scatter","dir":"Articles","previous_headings":"","what":"Scatter","title":"Getting started with 'ggautomap'","text":"Points drawn random within boundaries location.","code":"covid_cases_nsw %>%   ggplot(aes(location = lga)) +   geom_boundaries(feature_type = \"nswgeo.lga\") +   geom_geoscatter(aes(colour = type), sample_type = \"random\", size = 0.5) +   coord_automap(feature_type = \"nswgeo.lga\", xlim = c(147, 153), ylim = c(-33.7, -29)) +   guides(colour = guide_legend(override.aes = list(size = 1))) +   theme_void()"},{"path":"https://cidm-ph.github.io/ggautomap/articles/ggautomap.html","id":"insets","dir":"Articles","previous_headings":"","what":"Insets","title":"Getting started with 'ggautomap'","text":"show zoomed part map inset, can configure inset provide relevant geom. geoms package inset-aware. See ggmapinset details.","code":"covid_cases_nsw %>%   ggplot(aes(location = lga)) +   geom_boundaries(feature_type = \"nswgeo.lga\") +   geom_geoscatter(aes(colour = type), size = 0.5) +   geom_inset_frame() +   coord_automap(feature_type = \"nswgeo.lga\", inset = configure_inset(     centre = \"Blacktown\", radius = 40, units = \"km\",     scale = 7, translation = c(400, -100)   )) +   theme_void()"},{"path":"https://cidm-ph.github.io/ggautomap/articles/ggautomap.html","id":"packed-points","dir":"Articles","previous_headings":"","what":"Packed points","title":"Getting started with 'ggautomap'","text":"next example uses geom_centroids() place points packed circle centre feature. also shows can fine-tune plot usual ggplot2 functions.","code":"covid_cases_nsw %>%   dplyr::filter(year >= 2021) %>%   ggplot(aes(location = lhd)) +   geom_boundaries(feature_type = \"nswgeo.lhd\") +   geom_centroids(aes(colour = type), position = position_circle_repel_sf(scale = 35), size = 1) +   geom_inset_frame() +   coord_automap(feature_type = \"nswgeo.lhd\", inset = configure_inset(     centre = \"Sydney\", radius = 80, units = \"km\", feature_type = \"nswgeo.lhd\",     scale = 6, translation = c(650, -100)   )) +   facet_wrap(vars(year)) +   labs(x = NULL, y = NULL) +   theme_void() +   theme(strip.text = element_text(size = 12))"},{"path":"https://cidm-ph.github.io/ggautomap/articles/ggautomap.html","id":"choropleths","dir":"Articles","previous_headings":"","what":"Choropleths","title":"Getting started with 'ggautomap'","text":"data multiple rows location (example dataset rows disease cases) can use geom_choropleth() aggregate counts.  hand, dataset one row per location existing column ’d like map fill aesthetic, instead use geom_sf_inset(..., stat = \"automap\"):","code":"covid_cases_nsw %>%   ggplot(aes(location = lhd)) +   geom_choropleth() +   geom_boundaries(     feature_type = \"nswgeo.lhd\", colour = \"black\", linewidth = 0.1,     outline.aes = list(colour = NA)   ) +   geom_inset_frame() +   coord_automap(feature_type = \"nswgeo.lhd\", inset = configure_inset(     centre = \"Western Sydney\", radius = 60, units = \"km\",     scale = 5, translation = c(400, -100)   )) +   scale_fill_steps(low = \"#e6f9ff\", high = \"#00394d\", n.breaks = 5, na.value = \"white\") +   theme_void() summarised_data <- data.frame(   lhd = c(\"Western Sydney\", \"Sydney\", \"Far West\", \"Mid North Coast\", \"South Western Sydney\"),   cases = c(250, 80, 20, NA, 100) )  summarised_data %>%   ggplot(aes(location = lhd)) +   geom_sf_inset(aes(fill = cases), stat = \"automap\", colour = NA) +   geom_boundaries(     feature_type = \"nswgeo.lhd\", colour = \"black\", linewidth = 0.1,     outline.aes = list(colour = NA)   ) +   geom_inset_frame() +   coord_automap(feature_type = \"nswgeo.lhd\", inset = configure_inset(     centre = \"Western Sydney\", radius = 60, units = \"km\",     scale = 3.5, translation = c(350, 0)   )) +   scale_fill_gradient(low = \"#e6f9ff\", high = \"#00394d\", na.value = \"grey90\") +   theme_void()"},{"path":"https://cidm-ph.github.io/ggautomap/articles/ggautomap.html","id":"positioning-text","dir":"Articles","previous_headings":"","what":"Positioning text","title":"Getting started with 'ggautomap'","text":"examples give different ways placing text, accounting possible insets.  repulsive labels ggrepel can used; just require bit massaging since don’t natively understand spatial data. Note may also wish use point.padding = NA disable default repulsion caused labelled points, good labelling scatter plots often doesn’t make sense mapping contexts.","code":"covid_cases_nsw %>%   ggplot(aes(location = lhd)) +   geom_choropleth() +   geom_boundaries(feature_type = \"nswgeo.lhd\") +   geom_inset_frame() +   geom_sf_label_inset(aes(label = lhd),     stat = \"automap_coords\",     data = ~ dplyr::slice_head(.x, by = lhd)   ) +   coord_automap(feature_type = \"nswgeo.lhd\", inset = configure_inset(     centre = \"Western Sydney\", radius = 60, units = \"km\",     scale = 3.5, translation = c(350, 0)   )) +   labs(x = NULL, y = NULL) +   theme_void() library(ggrepel)  # label all features that have data covid_cases_nsw %>%   ggplot(aes(location = lhd)) +   geom_choropleth() +   geom_boundaries(feature_type = \"nswgeo.lhd\") +   geom_inset_frame() +   geom_label_repel(     aes(       x = after_stat(x_inset),       y = after_stat(y_inset),       label = lhd     ),     stat = \"automap_coords\",     nudge_x = 3,     nudge_y = 1,     point.padding = NA,     data = ~ dplyr::slice_head(.x, by = lhd)   ) +   scale_fill_distiller(direction = 1) +   coord_automap(feature_type = \"nswgeo.lhd\", inset = configure_inset(     centre = \"Western Sydney\", radius = 60, units = \"km\",     scale = 3.5, translation = c(350, 0)   )) +   labs(x = NULL, y = NULL) +   theme_void() # label all features in the map regardless of data, hiding visually overlapping labels covid_cases_nsw %>%   ggplot(aes(location = lhd)) +   geom_choropleth() +   geom_boundaries(feature_type = \"nswgeo.lhd\") +   geom_inset_frame() +   geom_label_repel(     aes(       x = after_stat(x_inset),       y = after_stat(y_inset),       geometry = geometry,       label = lhd_name     ),     stat = \"sf_coordinates_inset\",     data = cartographer::map_sf(\"nswgeo.lhd\"),     point.padding = NA,     inherit.aes = FALSE   ) +   scale_fill_distiller(direction = 1, palette = 2) +   coord_automap(feature_type = \"nswgeo.lhd\", inset = configure_inset(     centre = \"Western Sydney\", radius = 60, units = \"km\",     scale = 4, translation = c(500, 0)   )) +   labs(x = NULL, y = NULL) +   theme_void()"},{"path":"https://cidm-ph.github.io/ggautomap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Suster. Author, maintainer. Western Sydney Local Health District, NSW Health. Copyright holder.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Suster C (2024). ggautomap: Create Maps Column Place Names. R package version 0.3.2.9000,  https://cidm-ph.github.io/ggautomap/, https://github.com/cidm-ph/ggautomap.","code":"@Manual{,   title = {ggautomap: Create Maps from a Column of Place Names},   author = {Carl Suster},   year = {2024},   note = {R package version 0.3.2.9000,  https://cidm-ph.github.io/ggautomap/},   url = {https://github.com/cidm-ph/ggautomap}, }"},{"path":"https://cidm-ph.github.io/ggautomap/index.html","id":"ggautomap","dir":"","previous_headings":"","what":"Create Maps from a Column of Place Names","title":"Create Maps from a Column of Place Names","text":"ggautomap helps spreadsheet/table data includes column place names, want visualise data map. saves think geospatial libraries want make quick plot spreadsheet. See ‘Getting started’ article, vignette(\"ggautomap\"), recipes different types plots can make. ggautomap works best : data regions/areas/countries etc., row corresponds individual observation data point, locations names data part map registered cartographer. ggautomap might right … … place names location column aren’t known cartographer. ’ll register map data cartographer::register_map() load package . fairly painless set , can reused subsequent plots get working. … data points instead regions, single row region aggregate data. … data latitude longitude columns, already geospatial object sf dataframe. … want manipulate geometries otherwise control. ggautomap aimed simple case, geometries attached fly plot compiled. cases, instead use combination sf, ggplot2::geom_sf(), possibly cartographer direct control. just want map insets vignette, see ggmapinset.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Maps from a Column of Place Names","text":"can install ggautomap like :","code":"# CRAN release install.packages('ggautomap')  # development version install.packages('ggautomap', repos = c('https://cidm-ph.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://cidm-ph.github.io/ggautomap/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create Maps from a Column of Place Names","text":"Let’s use example dataset cartographer: possible workflow use cartographer::add_geometry() convert spatial data frame use ggplot2::geom_sf() draw . ggautomap instead provides geoms transparently needed, don’t need lot boilerplate wrangle data right form handing plotting code.","code":"library(cartographer)  head(nc_type_example_2) #>      county type #> 1    MARTIN    A #> 2  ALAMANCE    B #> 3    BERTIE    A #> 4   CHATHAM    B #> 5   CHATHAM    B #> 6 HENDERSON    B library(ggplot2) library(ggautomap)  ggplot(nc_type_example_2, aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_geoscatter(aes(colour = type), size = 0.5) +   coord_automap(feature_type = \"sf.nc\") ggplot(nc_type_example_2, aes(location = county)) +   geom_choropleth() +   geom_boundaries(feature_type = \"sf.nc\") +   scale_fill_steps(low = \"#e6f9ff\", high = \"#00394d\", na.value = \"white\") +   coord_automap(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":null,"dir":"Reference","previous_headings":"","what":"Associate regions with counts — geom_choropleth","title":"Associate regions with counts — geom_choropleth","text":"Counts number occurrences location, default maps count fill aesthetic. data one row per location field like map aesthetics, use geom_sf() geom_sf_inset() stat = \"automap\" instead.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Associate regions with counts — geom_choropleth","text":"","code":"geom_choropleth(   mapping = ggplot2::aes(),   data = NULL,   stat = \"choropleth\",   position = \"identity\",   ...,   feature_type = NA,   inset = NA,   map_base = \"normal\",   map_inset = \"auto\",   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )  stat_choropleth(   mapping = NULL,   data = NULL,   geom = \"sf\",   position = \"identity\",   ...,   feature_type = NA,   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Associate regions with counts — geom_choropleth","text":"mapping, data, stat, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. inset Inset configuration; see configure_inset(). NA (default), inherited coord (see coord_sf_inset()). map_base Controls layer base map. Possible values \"normal\" create layer though inset specified, \"clip\" create layer inset viewport cut , \"none\" prevent insertion layer base map. map_inset Controls layer inset map. Possible values \"auto\" choose behaviour based whether inset specified, \"normal\" create layer viewport cut transformed, \"none\" prevent insertion layer viewport map.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Associate regions with counts — geom_choropleth","text":"ggplot layer.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Associate regions with counts — geom_choropleth","text":"Note choropleths tendency misleading emphasising geographically larger areas.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Associate regions with counts — geom_choropleth","text":"location aesthetic required. geom_choropleth() understands aesthetics ggplot2::geom_sf().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Associate regions with counts — geom_choropleth","text":"count rows matching region geometry sf geometry column ... limits computed ggplot2::stat_sf()","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Associate regions with counts — geom_choropleth","text":"","code":"library(ggplot2)  cartographer::nc_type_example_2 |>   ggplot(aes(location = county)) +   geom_choropleth() +   geom_boundaries(feature_type = \"sf.nc\") +   scale_fill_steps(low = \"#e6f9ff\", high = \"#00394d\") +   coord_automap(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure transformations underpinning a map inset — configure_inset","title":"Configure transformations underpinning a map inset — configure_inset","text":"specialises ggmapinset::configure_inset() allow centre specified location. centroid location used inset's centre.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure transformations underpinning a map inset — configure_inset","text":"","code":"configure_inset(   centre = NULL,   scale = NULL,   translation = NULL,   radius = NULL,   units = \"km\",   feature_type = NA )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure transformations underpinning a map inset — configure_inset","text":"centre Coordinates inset centre. Can instead name geographic feature feature_type also provided. scale Zoom scale: values larger one make circle bigger. translation Translate (shift) inset. can st_point simply vector length 2 containing x y offsets respectively. radius Radius inset circle. units Base length unit (e.g. \"km\" \"mi\"). See ggmapinset::configure_inset() supported values. feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure transformations underpinning a map inset — configure_inset","text":"inset configuration object.","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure transformations underpinning a map inset — configure_inset","text":"","code":"cfg <- configure_inset(   centre = \"Yancey\",   feature_type = \"sf.nc\",   scale = 2,   translation = c(70, -180),   radius = 50,   units = \"mi\" )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_automap.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify an inset configuration for the whole plot — coord_automap","title":"Specify an inset configuration for the whole plot — coord_automap","text":"allows default inset configuration provided avoid repeat layer. layer inset-aware can use default configuration none specifically provided layer. coord also expands axis limits include inset area.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_automap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify an inset configuration for the whole plot — coord_automap","text":"","code":"coord_automap(feature_type = NA, inset = NULL, ...)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_automap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify an inset configuration for the whole plot — coord_automap","text":"feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. inset Inset configuration; see configure_inset(). ... Arguments passed ggmapinset::coord_sf_inset()","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_automap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify an inset configuration for the whole plot — coord_automap","text":"ggplot coordinate","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_automap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify an inset configuration for the whole plot — coord_automap","text":"","code":"library(ggplot2) library(cartographer)  ggplot(nc_type_example_2, aes(location = county)) +   geom_choropleth(aes(colour = type), size = 0.5) +   geom_sf_label_inset(aes(label = county), stat = \"automap_coords\", size = 3) +   coord_automap(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate reference system for spatial computations — crs_eqc","title":"Coordinate reference system for spatial computations — crs_eqc","text":"crs_eqc() gives CRS can used e.g. computing centroids distances. equidistant cylindrical system distort latitudes near latitude. CRS units kilometres default.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate reference system for spatial computations — crs_eqc","text":"","code":"crs_eqc(latitude = 0, units = \"km\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate reference system for spatial computations — crs_eqc","text":"latitude latitude true scale (proj parameter lat_ts). latitude scale distorted projection. units Base length unit (e.g. \"km\" \"mi\"). See ggmapinset::configure_inset() supported values.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate reference system for spatial computations — crs_eqc","text":"CRS object sf.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate reference system for spatial computations — crs_eqc","text":"","code":"# Sydney, Australia has a latitude of 33.87 S so this CRS will be suitable # for computations close to there: crs_eqc(latitude = -33.87) #> Coordinate Reference System: #>   User input: +proj=eqc +lat_ts=-33.87 +units=km  #>   wkt: #> PROJCRS[\"unknown\", #>     BASEGEOGCRS[\"unknown\", #>         DATUM[\"World Geodetic System 1984\", #>             ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>                 LENGTHUNIT[\"metre\",1]], #>             ID[\"EPSG\",6326]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8901]]], #>     CONVERSION[\"unknown\", #>         METHOD[\"Equidistant Cylindrical\", #>             ID[\"EPSG\",1028]], #>         PARAMETER[\"Latitude of 1st standard parallel\",-33.87, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8823]], #>         PARAMETER[\"Longitude of natural origin\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8802]], #>         PARAMETER[\"False easting\",0, #>             LENGTHUNIT[\"kilometre\",1000], #>             ID[\"EPSG\",8806]], #>         PARAMETER[\"False northing\",0, #>             LENGTHUNIT[\"kilometre\",1000], #>             ID[\"EPSG\",8807]]], #>     CS[Cartesian,2], #>         AXIS[\"(E)\",east, #>             ORDER[1], #>             LENGTHUNIT[\"kilometre\",1000, #>                 ID[\"EPSG\",9036]]], #>         AXIS[\"(N)\",north, #>             ORDER[2], #>             LENGTHUNIT[\"kilometre\",1000, #>                 ID[\"EPSG\",9036]]]]"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Map feature boundaries — geom_boundaries","title":"Map feature boundaries — geom_boundaries","text":"Retrieves full map data {cartographer} plots boundaries. well chosen feature boundaries, outline map drawn separately one registered map data, possibility override aesthetics.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map feature boundaries — geom_boundaries","text":"","code":"geom_boundaries(   mapping = ggplot2::aes(),   data = NULL,   stat = \"sf_inset\",   position = \"identity\",   ...,   feature_type = NULL,   inset = NA,   map_base = \"normal\",   map_inset = \"auto\",   na.rm = FALSE,   outline.aes = list(colour = \"#666666\"),   show.legend = NA,   inherit.aes = FALSE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map feature boundaries — geom_boundaries","text":"mapping, stat, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). data Ignored (geometry always uses registered geographic data). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. inset Inset configuration; see configure_inset(). NA (default), inherited coord (see coord_sf_inset()). map_base Controls layer base map. Possible values \"normal\" create layer though inset specified, \"clip\" create layer inset viewport cut , \"none\" prevent insertion layer base map. map_inset Controls layer inset map. Possible values \"auto\" choose behaviour based whether inset specified, \"normal\" create layer viewport cut transformed, \"none\" prevent insertion layer viewport map. outline.aes list override aesthetics outline map. effect map registered separate outline.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_boundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map feature boundaries — geom_boundaries","text":"ggplot layer.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_boundaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map feature boundaries — geom_boundaries","text":"","code":"library(ggplot2)  ggplot() +   geom_boundaries(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic centroid of locations — geom_centroids","title":"Geographic centroid of locations — geom_centroids","text":"Assigns point longitude latitude corresponding geographic centre administrative area. means points area overlap. default position uses position_circle_repel() repel points outwards amount controllable scale parameter.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic centroid of locations — geom_centroids","text":"","code":"geom_centroids(   mapping = ggplot2::aes(),   data = NULL,   stat = \"automap_coords\",   position = \"circle_repel_sf\",   ...,   fun.geometry = NULL,   feature_type = NA,   inset = NA,   map_base = \"clip\",   map_inset = \"auto\",   na.rm = TRUE,   show.legend = \"point\",   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographic centroid of locations — geom_centroids","text":"mapping, data, stat, position, na.rm, show.legend, inherit.aes, ... See ggplot2::stat_sf_coordinates(). fun.geometry function takes sfc object returns sfc_POINT length input. NULL, function(x) sf::st_point_on_surface(sf::st_zm(x)) used. Note function may warn incorrectness result data projected, can ignore except really care exact locations. feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. inset Inset configuration; see configure_inset(). NA (default), inherited coord (see coord_sf_inset()). map_base Controls layer base map. Possible values \"normal\" create layer though inset specified, \"clip\" create layer inset viewport cut , \"none\" prevent insertion layer base map. map_inset Controls layer inset map. Possible values \"auto\" choose behaviour based whether inset specified, \"normal\" create layer viewport cut transformed, \"none\" prevent insertion layer viewport map.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geographic centroid of locations — geom_centroids","text":"ggplot layer.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_centroids.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Geographic centroid of locations — geom_centroids","text":"location aesthetic required. geom_centroids() understands aesthetics ggplot2::geom_point().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geographic centroid of locations — geom_centroids","text":"","code":"library(ggplot2)  cartographer::nc_type_example_2 |>   head(n = 100) |>   ggplot(aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_centroids(aes(colour = type), position = position_circle_repel_sf(scale = 6), size = 0.5) +   coord_automap(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Place points randomly or in a grid within locations — geom_geoscatter","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"row data drawn single point inside geographic area. similar strengths standard scatter plot, potential misleading implying significance exact placement points.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"","code":"geom_geoscatter(   mapping = ggplot2::aes(),   data = NULL,   stat = \"geoscatter\",   position = \"identity\",   ...,   feature_type = NA,   sample_type = \"random\",   inset = NA,   map_base = \"clip\",   map_inset = \"auto\",   na.rm = TRUE,   show.legend = \"point\",   inherit.aes = TRUE )  stat_geoscatter(   mapping = NULL,   data = NULL,   geom = \"sf_inset\",   position = \"identity\",   ...,   feature_type = NA,   sample_type = \"random\",   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"mapping, data, stat, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. sample_type sampling type (see type argument sf::st_sample()). \"random\" place points randomly inside boundaries, whereas \"regular\" \"hexagonal\" evenly space points, leaving small margin close boundaries. inset Inset configuration; see configure_inset(). NA (default), inherited coord (see coord_sf_inset()). map_base Controls layer base map. Possible values \"normal\" create layer though inset specified, \"clip\" create layer inset viewport cut , \"none\" prevent insertion layer base map. map_inset Controls layer inset map. Possible values \"auto\" choose behaviour based whether inset specified, \"normal\" create layer viewport cut transformed, \"none\" prevent insertion layer viewport map.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"ggplot layer.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"location aesthetic required. geom_geoscatter() understands aesthetics ggplot2::geom_point().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"x longitude y latitude","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"","code":"library(ggplot2)  cartographer::nc_type_example_2 |>   ggplot(aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_geoscatter(aes(colour = type), size = 0.5) +   coord_automap(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/ggautomap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Maps From a Column of Place Names — ggautomap-package","title":"Create Maps From a Column of Place Names — ggautomap-package","text":"Mapping geometries based {ggplot2} turning spreadsheet maps. package provides ggplot geoms make maps data frame one columns contains place names. map data must registered {cartographer}.","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/ggautomap/reference/ggautomap-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Maps From a Column of Place Names — ggautomap-package","text":"Maintainer: Carl Suster Carl.Suster@health.nsw.gov.au (ORCID) contributors: Western Sydney Local Health District, NSW Health [copyright holder]","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":null,"dir":"Reference","previous_headings":"","what":"Pack overlapping points into a circle — position_circle_repel","title":"Pack overlapping points into a circle — position_circle_repel","text":"position looks points identical x y positions packs circle around original point. _sf version applies position adjustment projected coordinates.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pack overlapping points into a circle — position_circle_repel","text":"","code":"position_circle_repel(scale = 1/4)  position_circle_repel_sf(scale = 10)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pack overlapping points into a circle — position_circle_repel","text":"scale Scale packing around central point. data units, _sf variant depend units specified coordinate reference system.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pack overlapping points into a circle — position_circle_repel","text":"ggplot position object.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pack overlapping points into a circle — position_circle_repel","text":"Note extreme choices scale may cause errors. scale parameter can instead specified aesthetic geoms support (geom_centroids()). allows different locations different scales, especially useful combined map insets.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pack overlapping points into a circle — position_circle_repel","text":"","code":"library(ggplot2)  points <- data.frame(   x = c(rep(1, 10), 1:3),   y = c(rep(2, 10), 3:5),   s = 0.05 ) ggplot(points, aes(x, y)) +   geom_point(size = 3, colour = \"red\") +   geom_point(position = position_circle_repel(0.05), size = 3, alpha = 0.5)   cartographer::nc_type_example_2 |>   dplyr::filter(!county %in% c(\"HENDERSON\", \"GASTON\", \"LINCOLN\")) |>   ggplot(aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_centroids(aes(colour = type), position = position_circle_repel_sf(scale = 4), size = 0.2) +   coord_automap(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggmapinset geom_inset_frame, geom_sf_inset, geom_sf_label_inset, geom_sf_text_inset, GeomSfInset, stat_sf_inset, StatSfCoordinatesInset, StatSfInset","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach spatial data with 'cartographer' — stat_automap","title":"Attach spatial data with 'cartographer' — stat_automap","text":"Use cartographer attach spatial column data based place names another column. result can used ggplot2::geom_sf() ggmapinset::geom_sf_inset().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach spatial data with 'cartographer' — stat_automap","text":"","code":"stat_automap(   mapping = NULL,   data = NULL,   geom = \"sf\",   position = \"identity\",   ...,   feature_type = NA,   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach spatial data with 'cartographer' — stat_automap","text":"mapping, data, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach spatial data with 'cartographer' — stat_automap","text":"ggplot layer","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Attach spatial data with 'cartographer' — stat_automap","text":"geometry sf geometry column ... limits computed ggplot2::stat_sf()","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach spatial data with 'cartographer' — stat_automap","text":"","code":"library(ggplot2)  events <- data.frame(   county = c(\"Mecklenburg\", \"Carteret\", \"Moore\", \"Caldwell\"),   proportion_A = c(0.1, 0.8, 0.0, 0.6) )  ggplot(events, aes(location = county)) +   geom_sf(aes(fill = proportion_A), stat = \"automap\") #> Warning: Guessing `feature_type`; provide `feature_type` to coord_automap() to suppress   ggplot(events, aes(location = county)) +   stat_automap(aes(fill = proportion_A)) +   coord_automap(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach coordinates with 'cartographer' — stat_automap_coords","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"Use cartographer attach spatial column data based place names another column. spatial data reduced coordinates way stat_sf_coordinates().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"","code":"stat_automap_coords(   mapping = NULL,   data = NULL,   geom = \"sf_inset\",   position = \"identity\",   ...,   feature_type = NA,   na.rm = TRUE,   inset = NA,   fun.geometry = NULL,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"mapping, data, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::stat_sf_coordinates(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. inset Inset configuration; see configure_inset(). NA (default), inherited coord (see coord_sf_inset()). fun.geometry function takes sfc object returns sfc_POINT length input. NULL, function(x) sf::st_point_on_surface(sf::st_zm(x)) used. Note function may warn incorrectness result data projected, can ignore except really care exact locations.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"plot layer","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"geometry sf geometry column representing points x X dimension simple feature y Y dimension simple feature x_inset X dimension simple feature inset transformation y_inset Y dimension simple feature inset transformation inside_inset logical indicating points inside inset viewport inset_scale 1 points outside inset, otherwise configured inset scale parameter","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"","code":"library(ggplot2)  events <- data.frame(   county = c(\"Mecklenburg\", \"Carteret\", \"Moore\", \"Caldwell\"),   proportion_A = c(0.1, 0.8, 0.0, 0.6) )  ggplot(events, aes(location = county)) +   geom_sf(aes(fill = proportion_A), stat = \"automap\") +   geom_label(aes(label = county), stat = \"automap_coords\") +   coord_automap(feature_type = \"sf.nc\")"},{"path":[]},{"path":"https://cidm-ph.github.io/ggautomap/news/index.html","id":"ggautomap-032","dir":"Changelog","previous_headings":"","what":"ggautomap 0.3.2","title":"ggautomap 0.3.2","text":"CRAN release: 2023-05-24 Initial release CRAN.","code":""}]
