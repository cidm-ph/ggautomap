[{"path":"https://cidm-ph.github.io/ggautomap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Western Sydney Local Health District, NSW Health Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Suster. Author, maintainer. Thomas Lin Pedersen. Contributor.            Original author code pie.R taken 'ggforce' Western Sydney Local Health District, NSW Health. Copyright holder.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Suster C (2023). ggautomap: Create Maps Column Place Names. https://github.com/cidm-ph/ggautomap, https://cidm-ph.github.io/ggautomap/.","code":"@Manual{,   title = {ggautomap: Create Maps From a Column of Place Names},   author = {Carl Suster},   year = {2023},   note = {https://github.com/cidm-ph/ggautomap, https://cidm-ph.github.io/ggautomap/}, }"},{"path":"https://cidm-ph.github.io/ggautomap/index.html","id":"ggautomap","dir":"","previous_headings":"","what":"Create Maps From a Column of Place Names","title":"Create Maps From a Column of Place Names","text":"ggautomap provides ggplot2 geometries make use cartographer, framework matching place names map data. ggautomap input dataset doesn’t need spatially aware: geometries automatically attach map data (providing ’s registered cartographer).","code":""},{"path":"https://cidm-ph.github.io/ggautomap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Maps From a Column of Place Names","text":"can install ggautomap like :","code":"options(repos = c(   cidmph = 'https://cidm-ph.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    install.packages('ggautomap')"},{"path":"https://cidm-ph.github.io/ggautomap/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create Maps From a Column of Place Names","text":"Let’s use example dataset cartographer: possible workflow use cartographer::add_geometry() convert spatial data frame use ggplot2::geom_sf() draw . ggautomap instead provides geoms transparently needed, don’t need lot boilerplate wrangle data right form handing plotting code. can use data geoms provide map summaries. map outline, ’ll need specify feature_type, geoms usually able guess correct value.","code":"library(cartographer)  head(nc_type_example) #>    county type #> 1  BERTIE    B #> 2  BERTIE    A #> 3  BERTIE    A #> 4 PAMLICO    B #> 5  WARREN    B #> 6 PAMLICO    B library(ggplot2) library(ggautomap)  nc_type_example2 <- cartographer::nc_type_example[1:49,]  ggplot(nc_type_example2, aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_geoscatter(aes(colour = type), size = 0.5) ggplot(nc_type_example2, aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_centroids(aes(colour = type), size = 0.5, position = position_circle_repel_sf(scale = 6)) ggplot(nc_type_example2, aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_choropleth() +   scale_fill_steps(low = \"#e6f9ff\", high = \"#00394d\", na.value = \"white\") ggplot(nc_type_example2, aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_pie(aes(fill = type), pie_radius = 0.1)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Map state boundaries — geom_boundaries","title":"Map state boundaries — geom_boundaries","text":"Small wrappers around ggplot2::geom_sf() load appropriate geometry dataset add inset support.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map state boundaries — geom_boundaries","text":"","code":"geom_boundaries(   mapping = ggplot2::aes(),   data = NULL,   stat = \"sf\",   position = \"identity\",   ...,   feature_type = NULL,   inset = NULL,   map_base = \"normal\",   map_inset = \"auto\",   na.rm = FALSE,   outline.params = list(colour = \"#666666\"),   show.legend = NA,   inherit.aes = FALSE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map state boundaries — geom_boundaries","text":"mapping, stat, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). data Ignored (geometry always uses registered geographic data). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. inset Inset configuration; see configure_inset(). map_base Controls layer base map. Possible values \"normal\" create layer though inset specified, \"clip\" create layer inset viewport cut , \"none\" prevent insertion layer base map. map_inset Controls layer inset map. Possible values \"auto\" choose behaviour based whether inset specified, \"normal\" create layer viewport cut transformed, \"none\" prevent insertion og layer viewport map. outline.params list override parameters outline map.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map state boundaries — geom_boundaries","text":"ggplot layer.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map state boundaries — geom_boundaries","text":"well chosen feature boundaries, outline map drawn separately, possibility override colour linewidth aesthetics.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map state boundaries — geom_boundaries","text":"","code":"library(ggplot2)  ggplot() + geom_boundaries(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic centroid of locations — geom_centroids","title":"Geographic centroid of locations — geom_centroids","text":"Assigns point longitude latitude corresponding geographic centre administrative area. means points area overlap. default position uses position_circle_repel() repel points outwards amount controllable density parameter.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic centroid of locations — geom_centroids","text":"","code":"geom_centroids(   mapping = ggplot2::aes(),   data = NULL,   stat = \"automap_coords\",   position = \"circle_repel_sf\",   ...,   feature_type = NA,   inset = NULL,   map_base = \"clip\",   map_inset = \"auto\",   na.rm = TRUE,   show.legend = \"point\",   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographic centroid of locations — geom_centroids","text":"mapping, data, stat, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf() feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. inset Inset configuration; see configure_inset(). map_base Controls layer base map. Possible values \"normal\" create layer though inset specified, \"clip\" create layer inset viewport cut , \"none\" prevent insertion layer base map. map_inset Controls layer inset map. Possible values \"auto\" choose behaviour based whether inset specified, \"normal\" create layer viewport cut transformed, \"none\" prevent insertion og layer viewport map.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geographic centroid of locations — geom_centroids","text":"ggplot layer.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Geographic centroid of locations — geom_centroids","text":"location aesthetic required. geom_centroids() understands aesthetics ggplot2::geom_point().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geographic centroid of locations — geom_centroids","text":"","code":"library(ggplot2)  cartographer::nc_type_example[1:49,] |>   ggplot(aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_centroids(aes(colour = type, scale = 6), size = 0.5) #> Warning: Ignoring unknown aesthetics: scale"},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":null,"dir":"Reference","previous_headings":"","what":"Associate regions with counts — geom_choropleth","title":"Associate regions with counts — geom_choropleth","text":"Counts number occurrences location, default maps count fill aesthetic. data one row per location field like map aesthetics, use geom_sf() geom_sf_inset() stat = \"automap\" instead.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Associate regions with counts — geom_choropleth","text":"","code":"geom_choropleth(   mapping = ggplot2::aes(),   data = NULL,   stat = \"choropleth\",   position = \"identity\",   ...,   feature_type = NA,   inset = NULL,   map_base = \"normal\",   map_inset = \"auto\",   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )  stat_choropleth(   mapping = NULL,   data = NULL,   geom = \"sf\",   position = \"identity\",   ...,   feature_type = NA,   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Associate regions with counts — geom_choropleth","text":"mapping, data, stat, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. inset Inset configuration; see configure_inset(). map_base Controls layer base map. Possible values \"normal\" create layer though inset specified, \"clip\" create layer inset viewport cut , \"none\" prevent insertion layer base map. map_inset Controls layer inset map. Possible values \"auto\" choose behaviour based whether inset specified, \"normal\" create layer viewport cut transformed, \"none\" prevent insertion og layer viewport map.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Associate regions with counts — geom_choropleth","text":"ggplot layer.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Associate regions with counts — geom_choropleth","text":"Note choropleths tendency misleading emphasising geographically larger areas.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Associate regions with counts — geom_choropleth","text":"location aesthetic required. geom_choropleth() understands aesthetics ggplot2::geom_sf().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Associate regions with counts — geom_choropleth","text":"count rows matching region geometry sf geometry column ... limits computed ggplot2::stat_sf()","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Associate regions with counts — geom_choropleth","text":"","code":"library(ggplot2)  cartographer::nc_type_example[1:49,] |>   ggplot(aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_choropleth() +   scale_fill_steps(low = \"#e6f9ff\", high = \"#00394d\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure transformations underpinning a map inset — configure_inset","title":"Configure transformations underpinning a map inset — configure_inset","text":"specialises ggmapinset::configure_inset() allow centre specified location. centroid location used inset's centre.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure transformations underpinning a map inset — configure_inset","text":"","code":"configure_inset(   centre = NULL,   scale = NULL,   translation = NULL,   radius = NULL,   units = \"km\",   feature_type = NA )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure transformations underpinning a map inset — configure_inset","text":"centre Coordinates inset centre. Can instead name geographic feature feature_type also provided. scale Zoom scale: values larger one make circle bigger. translation Translate (shift) inset. can st_point simply vector length 2 containing x y offsets respectively. radius Radius inset circle. units Base length unit (e.g. \"km\" \"mi\"). See ggmapinset::configure_inset() supported values. feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure transformations underpinning a map inset — configure_inset","text":"inset configuration object.","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure transformations underpinning a map inset — configure_inset","text":"","code":"cfg <- configure_inset(   centre = \"Yancey\",   feature_type = \"sf.nc\",   scale = 2,   translation = c(70, -180),   radius = 50,   units = \"mi\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoom a map to show only certain features — coord_sf_zoom","title":"Zoom a map to show only certain features — coord_sf_zoom","text":"wrapper around ggplot2::coord_sf() automatically calculates coordinate limits based data /additional locations. bounding box calculated encompass included locations.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zoom a map to show only certain features — coord_sf_zoom","text":"","code":"coord_sf_zoom(include = NULL, include_data = TRUE, ...)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zoom a map to show only certain features — coord_sf_zoom","text":"include Vector feature names shown map. include_data Scalar logical, true features data also included. ... Additional arguments passed ggplot2::coord_sf().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zoom a map to show only certain features — coord_sf_zoom","text":"zoom specification can added ggplot object ggplot2::%+%.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zoom a map to show only certain features — coord_sf_zoom","text":"added plot call one ggautomap geoms. copy data feature_type first layer plot. layer, attempt guess feature type use data location mapping found top level ggplot() call.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zoom a map to show only certain features — coord_sf_zoom","text":"","code":"library(ggplot2)  # zoom in on locations that have data: cartographer::nc_type_example[1:49,] |>   ggplot(aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_centroids() +   coord_sf_zoom()   # or just zoom in on specific locations regardless of the data: cartographer::nc_type_example[1:49,] |>   ggplot(aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   coord_sf_zoom(include = c(\"Rowan\", \"Polk\"), include_data = FALSE)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate reference system for spatial computations — crs_eqc","title":"Coordinate reference system for spatial computations — crs_eqc","text":"crs_eqc() gives CRS can used e.g. computing centroids distances. equidistant cylindrical system distort latitudes near latitude. CRS units kilometres.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate reference system for spatial computations — crs_eqc","text":"","code":"crs_eqc(latitude = 0, units = \"km\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate reference system for spatial computations — crs_eqc","text":"latitude latitude true scale (proj parameter lat_ts). latitude scale distorted projection. units Base length unit (e.g. \"km\" \"mi\"). See ggmapinset::configure_inset() supported values.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate reference system for spatial computations — crs_eqc","text":"CRS object sf.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise regions with pie charts — geom_pie","title":"Summarise regions with pie charts — geom_pie","text":"Summarise regions pie charts","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise regions with pie charts — geom_pie","text":"","code":"geom_pie(   mapping = ggplot2::aes(),   data = NULL,   stat = \"centroid_pie\",   position = \"identity\",   ...,   feature_type = NA,   pie_radius = 1,   proportional = FALSE,   na.rm = TRUE,   show.legend = TRUE,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise regions with pie charts — geom_pie","text":"mapping, data, stat, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. pie_radius Scale side pies proportional TRUE, scale pies number rows region. radius pi proportional count.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise regions with pie charts — geom_pie","text":"ggplot layer.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Summarise regions with pie charts — geom_pie","text":"location aesthetic required.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise regions with pie charts — geom_pie","text":"","code":"library(ggplot2)  cartographer::nc_type_example[1:49,] |>   ggplot(aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_pie(aes(fill = type), pie_radius = 0.1)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Place points randomly or in a grid within locations — geom_geoscatter","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"row data drawn single point inside geographic area. similar strengths standard scatter plot, potential misleading implying significance exact placement points.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"","code":"geom_geoscatter(   mapping = ggplot2::aes(),   data = NULL,   stat = \"geoscatter\",   position = \"identity\",   ...,   feature_type = NA,   sample_type = c(\"random\", \"regular\", \"hexagonal\"),   inset = NULL,   map_base = \"clip\",   map_inset = \"auto\",   na.rm = TRUE,   show.legend = \"point\",   inherit.aes = TRUE )  stat_geoscatter(   mapping = NULL,   data = NULL,   geom = \"sf\",   position = \"identity\",   ...,   feature_type = NA,   sample_type = c(\"random\", \"regular\", \"hexagonal\"),   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"mapping, data, stat, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. sample_type sampling type (see type argument sf::st_sample()). \"random\" place points randomly inside boundaries, whereas \"regular\" \"hexagonal\" evenly space points, leaving small margin close boundaries. inset Inset configuration; see configure_inset(). map_base Controls layer base map. Possible values \"normal\" create layer though inset specified, \"clip\" create layer inset viewport cut , \"none\" prevent insertion layer base map. map_inset Controls layer inset map. Possible values \"auto\" choose behaviour based whether inset specified, \"normal\" create layer viewport cut transformed, \"none\" prevent insertion og layer viewport map.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"ggplot layer.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"location aesthetic required. geom_geoscatter() understands aesthetics ggplot2::geom_point().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"x longitude y latitude","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"","code":"library(ggplot2)  cartographer::nc_type_example[1:49,] |>   ggplot(aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_geoscatter(aes(colour = type), size = 0.5)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/ggautomap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Maps From a Column of Place Names — ggautomap-package","title":"Create Maps From a Column of Place Names — ggautomap-package","text":"Mapping geometries based {ggplot2} turning spreadsheet maps. package provides ggplot geoms make maps data frame one columns contains place names. map data must registered {cartographer}.","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/ggautomap/reference/ggautomap-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Maps From a Column of Place Names — ggautomap-package","text":"Maintainer: Carl Suster Carl.Suster@health.nsw.gov.au (ORCID) contributors: Thomas Lin Pedersen (Original author code pie.R taken 'ggforce') [contributor] Western Sydney Local Health District, NSW Health [copyright holder]","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":null,"dir":"Reference","previous_headings":"","what":"Pack overlapping points into a circle — position_circle_repel","title":"Pack overlapping points into a circle — position_circle_repel","text":"position looks points identical x y positions packs circle around original point. _sf version applies position adjustment projected coordinates.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pack overlapping points into a circle — position_circle_repel","text":"","code":"position_circle_repel(scale = 1/4)  position_circle_repel_sf(scale = 10)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pack overlapping points into a circle — position_circle_repel","text":"scale Scale packing around central point. data units, _sf variant depend units specified coordinate reference system.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pack overlapping points into a circle — position_circle_repel","text":"ggplot position object.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pack overlapping points into a circle — position_circle_repel","text":"Note extreme choices scale may cause errors. scale parameter can instead specified aesthetic geoms support (geom_centroids()). allows different locations different scales, especially useful combined map insets.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pack overlapping points into a circle — position_circle_repel","text":"","code":"library(ggplot2)  points <- data.frame(   x = c(rep(1, 10), 1:3),   y = c(rep(2, 10), 3:5),   s = 0.05) ggplot(points, aes(x, y)) +   geom_point(size = 3, colour = \"red\") +   geom_point(position = position_circle_repel(0.05), size = 3, alpha = 0.5)   nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"), quiet = TRUE) set.seed(1234567) counties <- sample(nc$NAME[1:3], size = 10, replace = TRUE, prob = c(0.8, 0.1, 0.1)) points <- data.frame(county = counties) points #>       county #> 1       Ashe #> 2       Ashe #> 3  Alleghany #> 4       Ashe #> 5       Ashe #> 6       Ashe #> 7       Ashe #> 8      Surry #> 9       Ashe #> 10     Surry  ggplot(points, aes(location = county)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_centroids(position = position_circle_repel_sf(scale = 0.05), size = 3) +   coord_sf_zoom()"},{"path":"https://cidm-ph.github.io/ggautomap/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggmapinset geom_inset_frame, geom_sf_inset","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach spatial data with 'cartographer' — stat_automap","title":"Attach spatial data with 'cartographer' — stat_automap","text":"Use cartographer attach spatial column data based place names another column. result can used ggplot2::geom_sf() ggmapinset::geom_sf_inset().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach spatial data with 'cartographer' — stat_automap","text":"","code":"stat_automap(   mapping = NULL,   data = NULL,   geom = \"sf\",   position = \"identity\",   ...,   feature_type = NA,   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach spatial data with 'cartographer' — stat_automap","text":"mapping, data, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach spatial data with 'cartographer' — stat_automap","text":"plot layer","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Attach spatial data with 'cartographer' — stat_automap","text":"geometry sf geometry column ... limits computed ggplot2::stat_sf()","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach spatial data with 'cartographer' — stat_automap","text":"","code":"library(ggplot2)  events <- data.frame(   county = c(\"Mecklenburg\", \"Carteret\", \"Moore\", \"Caldwell\"),   proportion_A = c(0.1, 0.8, 0.0, 0.6))  ggplot(events, aes(location = county)) +   geom_sf(aes(fill = proportion_A), stat = \"automap\")   ggplot(events, aes(location = county)) +   stat_automap(aes(fill = proportion_A)) +   coord_sf()"},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach coordinates with 'cartographer' — stat_automap_coords","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"Use cartographer attach spatial column data based place names another column. spatial data reduced coordinates way stat_sf_coordinates(). result can used geom_sf() geom_sf_inset() geom needs x y aesthetics.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"","code":"stat_automap_coords(   mapping = NULL,   data = NULL,   geom = \"sf\",   position = \"identity\",   ...,   feature_type = NA,   na.rm = TRUE,   fun.geometry = NULL,   crs_working = NULL,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"mapping, data, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::stat_sf_coordinates(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values feature_names. fun.geometry Function transform geometry one point per row. See stat_sf_coordinates(); difference spatial data first transformed crs_working reduce risk projection-related distortions. crs_working Coordinate reference system fun.geometry applied. provided, crs_eqc_midpoint used.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"plot layer","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"geometry sf geometry column containing points x X dimension simple feature y Y dimension simple feature","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/stat_automap_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach coordinates with 'cartographer' — stat_automap_coords","text":"","code":"library(ggplot2)  events <- data.frame(   county = c(\"Mecklenburg\", \"Carteret\", \"Moore\", \"Caldwell\"),   proportion_A = c(0.1, 0.8, 0.0, 0.6))  ggplot(events, aes(location = county)) +   geom_sf(aes(fill = proportion_A), stat = \"automap\") +   geom_label(aes(label = county), stat = \"automap_coords\")"}]
