[{"path":"https://cidm-ph.github.io/ggautomap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Western Sydney Local Health District, NSW Health Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Suster. Author, maintainer. Western Sydney Local Health District, NSW Health. Copyright holder.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Suster C (2022). ggautomap: Create Maps Column Place Names. https://github.com/cidm-ph/ggautomap, https://cidm-ph.github.io/ggautomap/.","code":"@Manual{,   title = {ggautomap: Create Maps From a Column of Place Names},   author = {Carl Suster},   year = {2022},   note = {https://github.com/cidm-ph/ggautomap, https://cidm-ph.github.io/ggautomap/}, }"},{"path":"https://cidm-ph.github.io/ggautomap/index.html","id":"ggautomap","dir":"","previous_headings":"","what":"Create Maps From a Column of Place Names","title":"Create Maps From a Column of Place Names","text":"ggautomap makes easy visualise data map column data names place/region. packages can register map data, nswgeo.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Maps From a Column of Place Names","text":"can install ggautomap like :","code":"options(repos = c(   cidmph = 'https://cidm-ph.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    install.packages('ggautomap')"},{"path":"https://cidm-ph.github.io/ggautomap/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create Maps From a Column of Place Names","text":"ggautomap comes one example dataset registered. can register additional map datasets depend another package registers . need column dataset matches feature_names() map data. \"sf.nc\" map data, dataset suitable: can use data geoms provide map summaries. map outline, ’ll need specify feature_type, geoms usually able guess correct value.","code":"library(ggplot2) library(ggautomap)  feature_types() #> [1] \"sf.nc\" head(feature_names(\"sf.nc\")) #> [1] \"Ashe\"        \"Alleghany\"   \"Surry\"       \"Currituck\"   \"Northampton\" #> [6] \"Hertford\" head(nc_type_example) #>   location type #> 1   Bertie    A #> 2   Bertie    A #> 3   Bertie    B #> 4  Pamlico    B #> 5   Warren    B #> 6  Pamlico    B ggplot(nc_type_example, aes(location = location)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_geoscatter(aes(colour = type), size = 0.5) ggplot(nc_type_example, aes(location = location)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_centroids(aes(colour = type, scale = 6), size = 0.5) ggplot(nc_type_example, aes(location = location)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_choropleth() +   scale_fill_steps(low = \"#e6f9ff\", high = \"#00394d\", na.value = \"white\") ggplot(nc_type_example, aes(location = location)) +   geom_boundaries(feature_type = \"sf.nc\") +   geom_pie(aes(fill = type), pie_radius = 0.1)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Map state boundaries — geom_boundaries","title":"Map state boundaries — geom_boundaries","text":"Small wrappers around ggplot2::geom_sf() load appropriate geometry dataset add inset support.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map state boundaries — geom_boundaries","text":"","code":"geom_boundaries(   mapping = ggplot2::aes(),   data = NULL,   stat = \"sf\",   position = \"identity\",   ...,   feature_type = NULL,   inset = NULL,   inset_copy = TRUE,   na.rm = FALSE,   outline_colour = \"#666666\",   outline_linewidth = NULL,   show.legend = NA,   inherit.aes = FALSE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map state boundaries — geom_boundaries","text":"mapping, stat, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). data Ignored (geometry always uses registered geographic data). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values data. inset Inset configuration; see configure_inset(). inset_copy Draw base layers inset layers using configuration. relevant inset specified. outline_colour, outline_linewidth Override aesthetics state outline. NULL, aesthetic inherited mapping.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map state boundaries — geom_boundaries","text":"well chosen feature boundaries, outline map drawn separately, possibility override colour linewidth aesthetics.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/boundaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map state boundaries — geom_boundaries","text":"","code":"library(ggplot2)  ggplot(nc_type_example, aes(location = location)) + geom_boundaries(feature_type = \"sf.nc\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic centroid of administrative areas — geom_centroids","title":"Geographic centroid of administrative areas — geom_centroids","text":"Assigns point longitude latitude corresponding geographic centre administrative area. means points area overlap. default position uses position_circle_repel() repel points outwards amount controllable density parameter.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic centroid of administrative areas — geom_centroids","text":"","code":"geom_centroids(   mapping = ggplot2::aes(),   data = NULL,   stat = \"centroids\",   position = \"circle_repel_sf\",   ...,   feature_type = NA,   inset = NULL,   inset_copy = TRUE,   inset_clip = TRUE,   na.rm = TRUE,   show.legend = \"point\",   inherit.aes = TRUE )  stat_centroids(   mapping = NULL,   data = NULL,   geom = \"sf\",   position = \"circle_repel\",   ...,   feature_type = NA,   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographic centroid of administrative areas — geom_centroids","text":"mapping, data, stat, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values data. inset Inset configuration; see configure_inset(). inset_copy Draw base layers inset layers using configuration. relevant inset specified. inset_clip inset drawn, place included points inset.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Geographic centroid of administrative areas — geom_centroids","text":"location aesthetic required. geom_centroids() understands aesthetics ggplot2::geom_point().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Geographic centroid of administrative areas — geom_centroids","text":"cendroid_longitude longitude administrative region's centroid centroid_latitude latitude administrative region's centroid","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geographic centroid of administrative areas — geom_centroids","text":"","code":"library(ggplot2)  ggplot(nc_type_example, aes(location = location)) + geom_boundaries(feature_type = \"sf.nc\") + geom_centroids(aes(colour = type, scale = 6), size = 0.5)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":null,"dir":"Reference","previous_headings":"","what":"Associate regions with counts — geom_choropleth","title":"Associate regions with counts — geom_choropleth","text":"Instead representing row separately, aggregate counts can used draw choropleths. Note choropleths tendency misleading emphasising geographically larger areas.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Associate regions with counts — geom_choropleth","text":"","code":"geom_choropleth(   mapping = ggplot2::aes(),   data = NULL,   stat = \"choropleth\",   position = \"identity\",   ...,   feature_type = NA,   inset = NULL,   inset_copy = TRUE,   inset_clip = FALSE,   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )  stat_choropleth(   mapping = NULL,   data = NULL,   geom = \"sf\",   position = \"identity\",   ...,   feature_type = NA,   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Associate regions with counts — geom_choropleth","text":"mapping, data, stat, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values data. inset Inset configuration; see configure_inset(). inset_copy Draw base layers inset layers using configuration. relevant inset specified. inset_clip inset drawn, place included points inset.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Associate regions with counts — geom_choropleth","text":"location aesthetic required. geom_choropleth() understands aesthetics ggplot2::geom_sf().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Associate regions with counts — geom_choropleth","text":"count rows matching region geometry sf geometry column ... limits computed ggplot2::stat_sf()","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/choropleth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Associate regions with counts — geom_choropleth","text":"","code":"library(ggplot2)  ggplot(nc_type_example, aes(location = location)) + geom_boundaries(feature_type = \"sf.nc\") + geom_choropleth() + scale_fill_steps(low = \"#e6f9ff\", high = \"#00394d\", na.value = \"white\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure transformations underpinning a map inset — configure_inset","title":"Configure transformations underpinning a map inset — configure_inset","text":"specialises ggmapinset::configure_inset() allow centre specified location.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure transformations underpinning a map inset — configure_inset","text":"","code":"configure_inset(   centre = NULL,   scale = NULL,   translation = NULL,   radius = NULL,   units = \"km\",   feature_type = NA )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/configure_inset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure transformations underpinning a map inset — configure_inset","text":"centre Coordinates inset centre. Can instead name geographic feature feature_type also provided. scale Zoom scale: values larger one make circle bigger. translation Translate (shift) inset. can st_point simply vector length 2 containing x y offsets respectively. radius Radius inset circle. units Base length unit (e.g. \"km\" \"mi\"). See ggmapinset::configure_inset() supported values. feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values data.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoom a map to show only certain features. — coord_sf_zoom","title":"Zoom a map to show only certain features. — coord_sf_zoom","text":"wrapper around ggplot2::coord_sf() automatically calculates coordinate limits based data /additional locations. bounding box calculated encompass included locations.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zoom a map to show only certain features. — coord_sf_zoom","text":"","code":"coord_sf_zoom(include = NULL, include_data = TRUE, ...)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zoom a map to show only certain features. — coord_sf_zoom","text":"include Vector feature names shown map. include_data Scalar logical, true features data also included. ... Additional arguments passed ggplot2::coord_sf().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/coord_sf_zoom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zoom a map to show only certain features. — coord_sf_zoom","text":"added plot call one ggautomap geoms. copy data feature_type first layer plot. layer, attempt guess feature type use data location mapping found top level ggplot() call.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate reference system for spatial computations — crs_eqc","title":"Coordinate reference system for spatial computations — crs_eqc","text":"crs_eqc() gives CRS can used e.g. computing centroids distances. equidistant cylindrical system distort latitudes near latitude. CRS units kilometres.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate reference system for spatial computations — crs_eqc","text":"","code":"crs_eqc(latitude = 0, units = \"km\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate reference system for spatial computations — crs_eqc","text":"latitude latitude true scale (proj parameter lat_ts). latitude scale distorted projection. units Base length unit (e.g. \"km\" \"mi\"). See ggmapinset::configure_inset() supported values.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/crs_eqc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate reference system for spatial computations — crs_eqc","text":"CRS object sf","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/feature_names.html","id":null,"dir":"Reference","previous_headings":"","what":"List known feature names — feature_names","title":"List known feature names — feature_names","text":"gives list feature names part specified map data. matching data column map data, names resolved checking first match using: case sensitive match, case sensitive match using aliases, case insensitive match, case insensitive match using aliases.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/feature_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List known feature names — feature_names","text":"","code":"feature_names(feature_type)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/feature_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List known feature names — feature_names","text":"feature_type Type map feature. See feature_types list registered types.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/feature_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List known feature names — feature_names","text":"Character vector names.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/feature_types.html","id":null,"dir":"Reference","previous_headings":"","what":"List known feature types — feature_types","title":"List known feature types — feature_types","text":"List known feature types","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/feature_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List known feature types — feature_types","text":"","code":"feature_types()"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise regions with pie charts — geom_pie","title":"Summarise regions with pie charts — geom_pie","text":"Summarise regions pie charts","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise regions with pie charts — geom_pie","text":"","code":"geom_pie(   mapping = ggplot2::aes(),   data = NULL,   stat = \"centroid_pie\",   position = \"identity\",   ...,   feature_type = NA,   pie_radius = 1,   proportional = FALSE,   na.rm = TRUE,   show.legend = TRUE,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise regions with pie charts — geom_pie","text":"mapping, data, stat, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values data. pie_radius Scale side pies proportional TRUE, scale pies number rows region. radius pi proportional count.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Summarise regions with pie charts — geom_pie","text":"location aesthetic required.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geom_pie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise regions with pie charts — geom_pie","text":"","code":"library(ggplot2)  ggplot(nc_type_example, aes(location = location)) + geom_boundaries(feature_type = \"sf.nc\") + geom_pie(aes(fill = type), pie_radius = 0.1)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Place points randomly or in a grid within locations — geom_geoscatter","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"row data drawn single point inside geographic area. similar strengths standard scatter plot, potential misleading implying significance exact placement points.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"","code":"geom_geoscatter(   mapping = ggplot2::aes(),   data = NULL,   stat = \"geoscatter\",   position = \"identity\",   ...,   feature_type = NA,   sample_type = c(\"random\", \"regular\", \"hexagonal\"),   inset = NULL,   inset_copy = TRUE,   inset_clip = TRUE,   na.rm = TRUE,   show.legend = \"point\",   inherit.aes = TRUE )  stat_geoscatter(   mapping = NULL,   data = NULL,   geom = \"sf\",   position = \"identity\",   ...,   feature_type = NA,   sample_type = c(\"random\", \"regular\", \"hexagonal\"),   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"mapping, data, stat, geom, position, na.rm, show.legend, inherit.aes, ... See ggplot2::geom_sf(). feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values data. sample_type sampling type (see type argument sf::st_sample()). \"random\" place points randomly inside boundaries, whereas \"regular\" \"hexagonal\" evenly space points, leaving small margin close boundaries. inset Inset configuration; see configure_inset(). inset_copy Draw base layers inset layers using configuration. relevant inset specified. inset_clip inset drawn, place included points inset.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"location aesthetic required. geom_geoscatter() understands aesthetics ggplot2::geom_point().","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"x longitude y latitude","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/geoscatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Place points randomly or in a grid within locations — geom_geoscatter","text":"","code":"library(ggplot2)  ggplot(nc_type_example, aes(location = location)) + geom_boundaries(feature_type = \"sf.nc\") + geom_geoscatter(aes(colour = type), size = 0.5)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/ggautomap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Maps From a Column of Place Names — ggautomap-package","title":"Create Maps From a Column of Place Names — ggautomap-package","text":"Mapping geometries based ggplot2 easy maps. package provides ggplot geoms make maps data frame one columns contains place names. map data must registered either user another package (e.g. nswgeo).","code":""},{"path":[]},{"path":"https://cidm-ph.github.io/ggautomap/reference/ggautomap-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Maps From a Column of Place Names — ggautomap-package","text":"Maintainer: Carl Suster Carl.Suster@health.nsw.gov.au (ORCID) contributors: Western Sydney Local Health District, NSW Health [copyright holder]","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/nc_type_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset for ggautomap illustration — nc_type_example","title":"Example dataset for ggautomap illustration — nc_type_example","text":"dataset contains random data compatible sf.nc example map data illustrating ggautomap's features.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/nc_type_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset for ggautomap illustration — nc_type_example","text":"","code":"nc_type_example"},{"path":"https://cidm-ph.github.io/ggautomap/reference/nc_type_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset for ggautomap illustration — nc_type_example","text":"data frame 50 rows 2 columns: location Location names match NAME field nc dataset type Arbitrary field map colour/fill aesthetics","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":null,"dir":"Reference","previous_headings":"","what":"Pack overlapping points into a circle — position_circle_repel","title":"Pack overlapping points into a circle — position_circle_repel","text":"position looks points identical x y positions packs circle around original point. _sf version applies position adjustment projected coordinates.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pack overlapping points into a circle — position_circle_repel","text":"","code":"position_circle_repel(scale = 1/4)  position_circle_repel_sf(scale = 10)"},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pack overlapping points into a circle — position_circle_repel","text":"scale Scale packing around central point. Note can alternatively set data column using scale aesthetic. data units, _sf variant depend units specified coordinate reference system.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/position_circle_repel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pack overlapping points into a circle — position_circle_repel","text":"Note extreme choices scale may cause errors.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggmapinset geom_inset_frame","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/register_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a new feature type — register_map","title":"Register a new feature type — register_map","text":"adds new feature type can used geoms package. registering another package, occur .onLoad() hook package.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/register_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a new feature type — register_map","text":"","code":"register_map(   feature_type,   data,   feature_column,   aliases = NULL,   outline = NULL,   lazy = TRUE )"},{"path":"https://cidm-ph.github.io/ggautomap/reference/register_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a new feature type — register_map","text":"feature_type Name type. include package name avoid clashes registered package. data simple feature data frame map data, function returns data frame. lazy TRUE, function called data first accessed. feature_column Name column data contains feature names. aliases Optional named character vector list maps aliases values appear feature column. allows abbreviations alternative names supported. outline Optional sf geometry containing just outline map. lazy TRUE, defer evaulation data used.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/register_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register a new feature type — register_map","text":"Registration supports delayed evaluation (lazy loading). particularly useful larger datasets, loaded memory accessed.","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/register_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a new feature type — register_map","text":"","code":"register_map(   \"sf.nc\",   function() sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\")),   feature_column = \"NAME\")"},{"path":"https://cidm-ph.github.io/ggautomap/reference/resolve_feature_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess the feature type if it was missing — resolve_feature_type","title":"Guess the feature type if it was missing — resolve_feature_type","text":"Guess feature type missing","code":""},{"path":"https://cidm-ph.github.io/ggautomap/reference/resolve_feature_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess the feature type if it was missing — resolve_feature_type","text":"feature_type Type map feature. See feature_types() list registered types. NA, type guessed based values data. locations Character vector location names data. context Name calling function, inclusion error message possible unambiguously guess feature type.","code":""}]
